# Cursor Rules для проекта сайта аренды

## Общие правила
- Используй TypeScript для всех компонентов и функций
- Следуй принципам чистого кода и SOLID
- Код должен быть модульным и легко поддерживаемым
- Используй современные React паттерны (hooks, context)
- Следуй архитектуре на основе feature-первого подхода
- Применяй prettier и eslint для форматирования кода
- Создавай типы и интерфейсы для всех моделей данных

## Структура проекта
- Организуй код по модулям/фичам, а не по типам файлов
- Используй относительные импорты для компонентов в одном модуле
- Используй абсолютные импорты для общих компонентов
- Храни бизнес-логику отдельно от компонентов в services/
- Обеспечь повторное использование компонентов

## Стили и компоненты
- Используй Tailwind CSS для стилизации
- Применяй принцип атомарного дизайна для компонентов
- Создавай переиспользуемые UI-компоненты в shared/ui
- Используй CSS модули для изолированных стилей
- Следуй единому дизайну для всех компонентов

## API и данные
- Используй React Query для кэширования и управления данными
- Создавай типизированные API-хуки для каждого запроса
- Обрабатывай ошибки на уровне API с общими обработчиками
- Применяй механизмы оптимистичных обновлений для UI
- Используй шаблоны для загрузки и обработки ошибок

## Производительность
- Применяй React.memo для тяжелых компонентов
- Используй динамический импорт для разделения кода
- Оптимизируй изображения через next/image
- Минимизируй перерендеры с useMemo и useCallback
- Используй пагинацию или виртуализацию для длинных списков

## Безопасность
- Валидируй все пользовательские данные на клиенте и сервере
- Используй httpOnly куки для JWT
- Применяй CSRF-токены для запросов
- Экранируй пользовательский контент
- Используй .env файлы для хранения секретов